// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"clean-arch/internal/adapter/auth/jwt"
	"clean-arch/internal/adapter/config"
	"clean-arch/internal/adapter/handler/http"
	"clean-arch/internal/adapter/infra/mongo"
	"clean-arch/internal/adapter/infra/mongo/repo"
	"clean-arch/internal/core/service"
	"context"
)

// Injectors from wire.go:

// InitializeApplication wires up all dependencies and returns an *Application.
func InitializeApplication(ctx context.Context) (*Application, error) {
	configConfig := config.Load()
	client, err := mongo.New(ctx, configConfig)
	if err != nil {
		return nil, err
	}
	userRepository := repo.NewUserRepo(client)
	userService := service.NewUser(userRepository)
	userHandler := http.NewUserHandler(userService)
	tokenService, err := jwt.New(configConfig)
	if err != nil {
		return nil, err
	}
	authService := service.NewAuth(userRepository, tokenService)
	authHandler := http.NewAuthHandler(authService)
	application, err := New(ctx, configConfig, client, userRepository, userHandler, authHandler, tokenService)
	if err != nil {
		return nil, err
	}
	return application, nil
}
